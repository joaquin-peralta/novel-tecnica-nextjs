{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joaquin/Develop/novel-tecnica-nextjs/components/Loader/Loader.js\";\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\nconst Loader = () => {\n  const router = useRouter();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    const handleStart = url => url !== router.asPath && setLoading(true);\n\n    const handleComplete = url => setLoading(false);\n\n    router.events.on('routeChangeStart', handleStart);\n    router.events.on('routeChangeComplete', handleComplete);\n    router.events.on('routeChangeError', handleComplete);\n    return () => {\n      router.events.off('routeChangeStart', handleStart);\n      router.events.off('routeChangeComplete', handleComplete);\n      router.events.off('routeChangeError', handleComplete);\n    };\n  });\n  return loading && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Loader\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lds-ellipsis\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\nexport default Loader;","map":{"version":3,"sources":["/home/joaquin/Develop/novel-tecnica-nextjs/components/Loader/Loader.js"],"names":["useState","useEffect","useRouter","Loader","router","loading","setLoading","handleStart","url","asPath","handleComplete","events","on","off"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM;AAAA,OAACG,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,WAAW,GAAIC,GAAD,IAASA,GAAG,KAAKJ,MAAM,CAACK,MAAf,IAAyBH,UAAU,CAAC,IAAD,CAAhE;;AACA,UAAMI,cAAc,GAAIF,GAAD,IAASF,UAAU,CAAC,KAAD,CAA1C;;AAEAF,IAAAA,MAAM,CAACO,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCL,WAArC;AACAH,IAAAA,MAAM,CAACO,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCF,cAAxC;AACAN,IAAAA,MAAM,CAACO,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCF,cAArC;AACA,WAAO,MAAM;AACXN,MAAAA,MAAM,CAACO,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCN,WAAtC;AACAH,MAAAA,MAAM,CAACO,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCH,cAAzC;AACAN,MAAAA,MAAM,CAACO,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCH,cAAtC;AACD,KAJD;AAKD,GAZQ,CAAT;AAaA,SACEL,OAAO,iBACL;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFJ;AAYD,CA5BD;;AA8BA,eAAeF,MAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\nconst Loader = () => {\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const handleStart = (url) => url !== router.asPath && setLoading(true);\n    const handleComplete = (url) => setLoading(false);\n\n    router.events.on('routeChangeStart', handleStart);\n    router.events.on('routeChangeComplete', handleComplete);\n    router.events.on('routeChangeError', handleComplete);\n    return () => {\n      router.events.off('routeChangeStart', handleStart);\n      router.events.off('routeChangeComplete', handleComplete);\n      router.events.off('routeChangeError', handleComplete);\n    };\n  });\n  return (\n    loading && (\n      <div className=\"Loader\">\n        <div className=\"lds-ellipsis\">\n          <div />\n          <div />\n          <div />\n          <div />\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default Loader;\n"]},"metadata":{},"sourceType":"module"}